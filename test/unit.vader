Before:
  function! Region(start, end)
    return ["V", [0, a:start, 0, 0], [0, a:end, 0, 0]]
  endfunction

  function! SingleChar(line, col)
    return ["v", [0, a:line, a:col, 0], [0, a:line, a:col, 0]]
  endfunction

Given (unindented paragraphs):
  abc
  def
  ghi

  jkl

Execute (at end of paragraph):
  1
  AssertEqual indented_paragraph#Select(1, 0), Region(1, 3)
  AssertEqual indented_paragraph#Select(1, 1), Region(1, 4)

Execute (in middle of paragraph):
  2
  AssertEqual indented_paragraph#Select(1, 0), Region(1, 3)
  AssertEqual indented_paragraph#Select(1, 1), Region(1, 4)

Execute (empty line):
  4
  AssertEqual indented_paragraph#Select(1, 0), 0
  AssertEqual indented_paragraph#Select(1, 1), 0

Execute (single line paragraph):
  5
  AssertEqual indented_paragraph#Select(1, 0), Region(5, 5)
  AssertEqual indented_paragraph#Select(1, 1), Region(4, 5)

Execute (movement):
  2
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(5, 1)

  4
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(5, 1)

  5
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(5, 1)

Given (indented paragraphs):
  abc
    def
    ghi

    jkl
    
    # The above line INTENTIONALLY contains spaces
    mno
    pqr
  stu

Execute (at start of block):
  1
  AssertEqual indented_paragraph#Select(1, 0), Region(1, 3)
  AssertEqual indented_paragraph#Select(1, 1), Region(1, 4)
  AssertEqual indented_paragraph#Select(2, 0), Region(1, 5)
  AssertEqual indented_paragraph#Select(2, 1), Region(1, 6)
  AssertEqual indented_paragraph#Select(3, 0), Region(1, 10)
  AssertEqual indented_paragraph#Select(3, 1), Region(1, 10)

Execute (inside block):
  2
  AssertEqual indented_paragraph#Select(1, 0), Region(2, 3)
  AssertEqual indented_paragraph#Select(1, 1), Region(2, 4)
  AssertEqual indented_paragraph#Select(2, 0), Region(2, 5)
  AssertEqual indented_paragraph#Select(2, 1), Region(2, 6)
  AssertEqual indented_paragraph#Select(3, 0), Region(2, 9)
  AssertEqual indented_paragraph#Select(3, 1), Region(2, 9)

Execute (inside second block):
  5
  AssertEqual indented_paragraph#Select(1, 0), Region(5, 5)
  AssertEqual indented_paragraph#Select(1, 1), Region(5, 6)
  AssertEqual indented_paragraph#Select(2, 0), Region(5, 9)
  AssertEqual indented_paragraph#Select(2, 1), Region(4, 9)
  AssertEqual indented_paragraph#Select(3, 0), Region(5, 9)
  AssertEqual indented_paragraph#Select(3, 1), Region(4, 9)

Execute (inside third block):
  7
  AssertEqual indented_paragraph#Select(1, 0), Region(7, 9)
  AssertEqual indented_paragraph#Select(1, 1), Region(6, 9)
  AssertEqual indented_paragraph#Select(2, 0), Region(7, 9)
  AssertEqual indented_paragraph#Select(2, 1), Region(6, 9)
  AssertEqual indented_paragraph#Select(3, 0), Region(7, 9)
  AssertEqual indented_paragraph#Select(3, 1), Region(6, 9)

Execute (movement):
  1
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(10, 1)

  2
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(5, 3)

  3
  AssertEqual indented_paragraph#Move(-1), SingleChar(2, 3)
  AssertEqual indented_paragraph#Move(1), SingleChar(5, 3)

  5
  AssertEqual indented_paragraph#Move(-1), SingleChar(2, 3)
  AssertEqual indented_paragraph#Move(1), SingleChar(7, 3)

  7
  AssertEqual indented_paragraph#Move(-1), SingleChar(5, 3)
  AssertEqual indented_paragraph#Move(1), SingleChar(10, 1)

  10
  AssertEqual indented_paragraph#Move(-1), SingleChar(1, 1)
  AssertEqual indented_paragraph#Move(1), SingleChar(10, 1)
